package bibliotecagrupo5.Vistas;

import bibliotecagrupo5.AccesoADatos.EjemplarData;
import bibliotecagrupo5.AccesoADatos.PrestamoData;
import bibliotecagrupo5.Entidades.Condicion;
import bibliotecagrupo5.Entidades.Ejemplar;
import bibliotecagrupo5.Entidades.Prestamo;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import java.util.TreeSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author BETO
 */
public class ConsultaDemoraFechaDevolucion extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };

    private PrestamoData prestamoData = null;
    private EjemplarData ejemplarData = null;
    private Ejemplar ejemplarNuevo=null;
    private TreeSet<Prestamo> listaPrestamo = null;

    /**
     * Creates new form ConsultaFechaDevolucion
     */
    public ConsultaDemoraFechaDevolucion() {
        initComponents();
        armarCabecera();
        ajustarTamañoColumnas();

        prestamoData = new PrestamoData();
        ejemplarData = new EjemplarData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTLectores = new javax.swing.JTable();
        jbConsultar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jbLimpiar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Consulta Demora Fecha de Devolucion");

        jLabel1.setText("Lectores con Prestamos Vencidos");

        jTLectores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ));
        jTLectores.getTableHeader().setResizingAllowed(false);
        jTLectores.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTLectores);

        jbConsultar.setText("Consultar");
        jbConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConsultarActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jbLimpiar.setText("Limpiar Tabla");
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(jbLimpiar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(279, 279, 279)
                .addComponent(jbSalir)
                .addGap(76, 76, 76))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(358, 358, 358)
                        .addComponent(jLabel1)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbConsultar)
                    .addComponent(jbSalir)
                    .addComponent(jbLimpiar))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConsultarActionPerformed
        // TODO add your handling code here:
        borrarTabla();
        LocalDate fechaActual = LocalDate.now();


        try {
            listaPrestamo = prestamoData.obtenerPrestamosVencidos(fechaActual);

            for (Prestamo aux : listaPrestamo) {
                long diferenciaEnDias = aux.getFechaFin().until(fechaActual, ChronoUnit.DAYS);
                

                modelo.addRow(new Object[]{
                    aux.getLector().getNroSocio(),
                    aux.getLector().getNombre(),
                    aux.getLector().getApellido(),
                    aux.getEjemplar().getLibro().getTitulo(),
                    aux.getFechaFin(),
                    fechaActual,
                    diferenciaEnDias,});
                
//                ejemplarNuevo=aux.getEjemplar();
//                ejemplarNuevo.setCondicion(Condicion.RETRASO);
//                ejemplarNuevo.setCantidad(1);
//                ejemplarData.
//                
//                aux.getEjemplar().setCantidad(aux.getEjemplar().getCantidad()-1);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "No hay datos para mostrar: " + ex.getMessage());
        }

    }//GEN-LAST:event_jbConsultarActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        int respuesta = JOptionPane.showConfirmDialog(this, "¿Desea Salir?",
                "Salir", JOptionPane.YES_NO_OPTION,
                JOptionPane.INFORMATION_MESSAGE);
        if (respuesta == 0) {
            dispose();
        }
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed
        // TODO add your handling code here:
        borrarTabla();
    }//GEN-LAST:event_jbLimpiarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTLectores;
    private javax.swing.JButton jbConsultar;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JButton jbSalir;
    // End of variables declaration//GEN-END:variables
    private void armarCabecera() {
        modelo.addColumn("Nro Socio");
        modelo.addColumn("Nombre");
        modelo.addColumn("Apellido");
        modelo.addColumn("Ejemplar");
        modelo.addColumn("Fin Prestamo");
        modelo.addColumn("Fecha Actual");
        modelo.addColumn("Retraso en (Dias)");
        jTLectores.setModel(modelo);
    }

    private void ajustarTamañoColumnas() {

        TableColumn columnaNroSocio = jTLectores.getColumnModel().getColumn(0);
        columnaNroSocio.setPreferredWidth(60);

        TableColumn columnaNombre = jTLectores.getColumnModel().getColumn(1);
        columnaNombre.setPreferredWidth(120);

        TableColumn columnaApellido = jTLectores.getColumnModel().getColumn(2);
        columnaApellido.setPreferredWidth(80);

        TableColumn columnaEjemplar = jTLectores.getColumnModel().getColumn(5);
        columnaEjemplar.setPreferredWidth(40);

        TableColumn columnaFinPrestamo = jTLectores.getColumnModel().getColumn(3);
        columnaFinPrestamo.setPreferredWidth(40);

        TableColumn columnaFechaActual = jTLectores.getColumnModel().getColumn(4);
        columnaFechaActual.setPreferredWidth(40);
        
        TableColumn columnaRetraso = jTLectores.getColumnModel().getColumn(4);
        columnaRetraso.setPreferredWidth(80);

    }

    private void borrarTabla() {
        modelo.setRowCount(0);
    }
}
