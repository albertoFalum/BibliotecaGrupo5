/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package bibliotecagrupo5.Vistas;

import bibliotecagrupo5.AccesoADatos.EjemplarData;
import bibliotecagrupo5.AccesoADatos.LibroData;
import bibliotecagrupo5.Entidades.Condicion;
import bibliotecagrupo5.Entidades.Ejemplar;
import bibliotecagrupo5.Entidades.Libro;
import bibliotecagrupo5.Entidades.Tipo;
import java.util.TreeSet;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Leandro
 */
public class GestionDeEjemplares extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int f, int c) {
            return c == 3;
        }
    };
    private LibroData librodata = new LibroData();
    private Libro libroAux = null;
    private Ejemplar ejemplar = null;
    private EjemplarData ejemplardata = new EjemplarData();

    /**
     * Creates new form GestionDeEjemplares
     */
    public GestionDeEjemplares() {

        initComponents();
        cargarComboLibros();
        cargarComboCondicionTotal();
        cargarComboCondicion();
        armarCabecera();
        ajustarTama√±oColumnas();
        crearComboBox();
        SpinnerNumberModel modeloSpinner = new SpinnerNumberModel();
        modeloSpinner.setMinimum(1);
        modeloSpinner.setValue(1);
        jsCantidad1.setModel(modeloSpinner);
        jsCantidad2.setModel(modeloSpinner);
        jcbCondicion1.setVisible(false);
        jsCantidad2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jcbEjemplarLibro = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jrbEstado = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jcbCondicion = new javax.swing.JComboBox<>();
        jbNuevo = new javax.swing.JButton();
        jbGuardar = new javax.swing.JButton();
        jsCantidad1 = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jcbEjemplarLibro2 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jcbCondicion1 = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jsCantidad2 = new javax.swing.JSpinner();
        jbModificar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTabla = new javax.swing.JTable();
        jbSalir = new javax.swing.JButton();

        jButton1.setText("jButton1");

        jPanel1.setBackground(new java.awt.Color(255, 0, 0));

        jLabel1.setText("Ejemplares");

        jcbEjemplarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbEjemplarLibroActionPerformed(evt);
            }
        });

        jLabel3.setText("Libro:");

        jLabel4.setText("Cantidad:");

        jLabel6.setText("Estado:");

        jrbEstado.setSelected(true);
        jrbEstado.setEnabled(false);

        jLabel7.setText("Condicion:");

        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jbGuardar.setText("Guardar");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jsCantidad1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel6)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(64, 64, 64)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jrbEstado)
                                                    .addComponent(jLabel1))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addComponent(jcbCondicion, 0, 157, Short.MAX_VALUE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jcbEjemplarLibro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jbNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbGuardar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbEjemplarLibro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jsCantidad1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrbEstado)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jcbCondicion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 257, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNuevo)
                    .addComponent(jbGuardar))
                .addGap(127, 127, 127))
        );

        jLabel2.setText("Modificacion de Ejemplares");

        jLabel5.setText("Libro:");

        jcbEjemplarLibro2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbEjemplarLibro2ActionPerformed(evt);
            }
        });

        jLabel8.setText("Condicion:");

        jcbCondicion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCondicion1ActionPerformed(evt);
            }
        });

        jLabel9.setText("Cantidad a modificar:");

        jbModificar.setText("Modificar");
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jtTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Titulo", "Autor", "Tipo"
            }
        ));
        jScrollPane1.setViewportView(jtTabla);
        if (jtTabla.getColumnModel().getColumnCount() > 0) {
            jtTabla.getColumnModel().getColumn(0).setResizable(false);
            jtTabla.getColumnModel().getColumn(1).setResizable(false);
            jtTabla.getColumnModel().getColumn(2).setResizable(false);
        }

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jsCantidad2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jcbCondicion1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jbModificar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbEliminar)
                                .addGap(87, 87, 87))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                                .addComponent(jcbEjemplarLibro2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbSalir)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbEjemplarLibro2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jsCantidad2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jcbCondicion1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(jLabel9)))
                .addGap(47, 47, 47)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbModificar)
                    .addComponent(jbEliminar)
                    .addComponent(jbSalir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbEjemplarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbEjemplarLibroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbEjemplarLibroActionPerformed

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        jcbEjemplarLibro.setSelectedIndex(0);
        jsCantidad1.setValue(1);
        jcbCondicion.setSelectedIndex(0);
    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed

        Libro libroSeleccionado = (Libro) jcbEjemplarLibro.getSelectedItem();

        int cantLibros = (Integer) jsCantidad1.getValue();
        boolean estado = jrbEstado.isSelected();
        Condicion condicion = (Condicion) jcbCondicion.getSelectedItem();
        Ejemplar ejemplarNuevo = ejemplardata.BuscarEjemplarIdLibroYCondicion(libroSeleccionado.getIdLibro(), condicion);
        if (ejemplarNuevo == null) {
            Ejemplar ejemplar = new Ejemplar(libroSeleccionado, cantLibros, estado, condicion);
            ejemplardata.guardarEjemplar(ejemplar);
        } else {
            int cantNueva = ejemplarNuevo.getCantidad() + cantLibros;
            ejemplarNuevo.setCantidad(cantNueva);
            ejemplardata.modificarEjemplar(ejemplarNuevo);
        }


    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jcbEjemplarLibro2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbEjemplarLibro2ActionPerformed
        borrarTabla();
        Libro libroSeleccionado = (Libro) jcbEjemplarLibro2.getSelectedItem();

        TreeSet<Ejemplar> ejemplares = ejemplardata.listarEjemplaresPorLibro(libroSeleccionado.getIdLibro());
        cargarTabla(ejemplares);
        jsCantidad2.setValue(1);
        jcbCondicion1.setVisible(true);
        jsCantidad2.setVisible(true);
        jtTabla.setEnabled(iconable);
    }//GEN-LAST:event_jcbEjemplarLibro2ActionPerformed

    private void jcbCondicion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCondicion1ActionPerformed
        borrarTabla();
        jtTabla.setEnabled(true);
        Libro libroSeleccionado = (Libro) jcbEjemplarLibro2.getSelectedItem();
        Condicion condicion = (Condicion) jcbCondicion1.getSelectedItem();

        Ejemplar ejemplaresC = ejemplardata.BuscarEjemplarIdLibroYCondicion(libroSeleccionado.getIdLibro(), condicion);
        if (ejemplaresC != null) {

            jsCantidad2.setValue(ejemplaresC.getCantidad());
            cargarTabla(ejemplaresC);
        } else {
            JOptionPane.showMessageDialog(this, "No se encontro Ningun ejemplar con ese estado");

        }
    }//GEN-LAST:event_jcbCondicion1ActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        int respuesta = JOptionPane.showConfirmDialog(this, "¬øDesea Salir?",
                "Salir", JOptionPane.YES_NO_OPTION,
                JOptionPane.INFORMATION_MESSAGE);
        if (respuesta == 0) {
            dispose();
        }
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        int filaSeleccionada = jtTabla.getSelectedRow();
        Libro libroSeleccionado = (Libro) jcbEjemplarLibro2.getSelectedItem();

        if (filaSeleccionada != -1) {
            int codigo = (int) jtTabla.getValueAt(filaSeleccionada, 0);
            TreeSet<Ejemplar> listaEjemplares = ejemplardata.listarEjemplaresNoDisponibles(libroSeleccionado.getIdLibro(), Condicion.DISPONIBLE);
            if (listaEjemplares.isEmpty()) {
                int respuesta = JOptionPane.showConfirmDialog(this, "¬øDesea eliminar el libro con id " + libroSeleccionado.getIdLibro() + " ?",
                        "Eliminacion", JOptionPane.YES_NO_OPTION,
                        JOptionPane.INFORMATION_MESSAGE);

                if (respuesta == 0) {
                    ejemplardata.eliminarEjemplar(libroSeleccionado.getIdLibro());
                }
            } else {
                JOptionPane.showMessageDialog(this, "No puede eliminar el libro con id " + libroSeleccionado.getIdLibro() + " "
                        + "- Existen ejemplares con la condicion Prestado, Retraso o Reparacion");
            }
            jtTabla.clearSelection();
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una fila");
        }
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        int filaSeleccionada = (Integer) jtTabla.getSelectedRow();
        Libro libro = (Libro) jcbEjemplarLibro2.getSelectedItem();
        Condicion condicion = (Condicion) jcbCondicion1.getSelectedItem();
        Ejemplar ejem = ejemplardata.BuscarEjemplarIdLibroYCondicion(libro.getIdLibro(), condicion);
        if (filaSeleccionada != -1) {

            try {
                int cantidad = (Integer) jsCantidad2.getValue();
                int cantidadAnt = ejem.getCantidad();
                if (cantidad <= cantidadAnt) {//control de cantidad
                    int resul =cantidadAnt - cantidad ;
                    System.out.println("resul"+resul+"cantidadAnt"+cantidadAnt+"cantidad"+cantidad);
                    Condicion nuevaCondicion = (Condicion) jtTabla.getValueAt(filaSeleccionada, 3);
                    int codigo = (Integer) jtTabla.getValueAt(filaSeleccionada, 0);
                    System.out.println(libro.getIdLibro()+" "+nuevaCondicion.name());
                    Ejemplar ejemplar1 = ejemplardata.BuscarEjemplarIdLibroYCondicion(libro.getIdLibro(), nuevaCondicion);
                    if (ejemplar1 == null) {
                            System.out.println("no se encontro ejemplar con esa condicion e id libro");
                        Ejemplar ejemplar2 = new Ejemplar(libro, cantidad, true, nuevaCondicion);
                        ejemplardata.guardarEjemplar(ejemplar2);
                        ejem.setCantidad(resul);
                        ejemplardata.modificarEjemplar(ejem);
                        
                    } else if (condicion.ordinal()<nuevaCondicion.ordinal()) {
//                        
                        System.out.println("condicion menor que condicionNueva");
                         
                          Ejemplar primerEjemplar=ejemplardata.buscarEjemplar(codigo);
                          int result=primerEjemplar.getCantidad()-cantidad;
                        
                          primerEjemplar.setCantidad(result);
                          ejemplardata.modificarEjemplar(primerEjemplar);
                          Ejemplar segundoEjemplar=ejemplardata.BuscarEjemplarIdLibroYCondicion(libro.getIdLibro(), nuevaCondicion);
                          int result2=segundoEjemplar.getCantidad()+cantidad;
                          segundoEjemplar.setCantidad(result2);
                          ejemplardata.modificarEjemplar(segundoEjemplar);

                    } else if(condicion.ordinal()>nuevaCondicion.ordinal()){
//                      
                          System.out.println("condicion mayor que condicionNueva");
                          Ejemplar primerEjemplar=ejemplardata.buscarEjemplar(codigo);
                          int result=primerEjemplar.getCantidad()-cantidad;
                         
                          primerEjemplar.setCantidad(result);
                          ejemplardata.modificarEjemplar(primerEjemplar);
                          Ejemplar segundoEjemplar=ejemplardata.BuscarEjemplarIdLibroYCondicion(libro.getIdLibro(), nuevaCondicion);
                          int result2=segundoEjemplar.getCantidad()+cantidad;
                          segundoEjemplar.setCantidad(result2);
                          ejemplardata.modificarEjemplar(segundoEjemplar);
                    }else {
                            JOptionPane.showMessageDialog(this, "Ingrese otra condicion!");
                    
                            
//                       
                    }

//                        
                } else {
                    JOptionPane.showMessageDialog(this, "la cantidad que desea modificar es mayor a la disponible");
                    jsCantidad2.setVisible(isIcon);
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Debe ingresar un numero");
            } catch(NullPointerException ex){
                JOptionPane.showMessageDialog(this, "el ejemplar no se encontro");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Debe seleccionar una fila");
        }

    }//GEN-LAST:event_jbModificarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbModificar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Condicion> jcbCondicion;
    private javax.swing.JComboBox<Condicion> jcbCondicion1;
    private javax.swing.JComboBox<Libro> jcbEjemplarLibro;
    private javax.swing.JComboBox<Libro> jcbEjemplarLibro2;
    private javax.swing.JRadioButton jrbEstado;
    private javax.swing.JSpinner jsCantidad1;
    private javax.swing.JSpinner jsCantidad2;
    private javax.swing.JTable jtTabla;
    // End of variables declaration//GEN-END:variables
    public void cargarComboLibros() {
        try {

            TreeSet<Libro> listarLibros = librodata.listarLibros();
            for (Libro aux : listarLibros) {
                jcbEjemplarLibro.addItem(aux);
                jcbEjemplarLibro2.addItem(aux);
            }
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error No se cargo ningun Libro" + ex.getMessage());
        }
    }

    private void borrarTabla() {
        modelo.setRowCount(0);
    }

    public void cargarComboCondicionTotal() {

        jcbCondicion1.addItem(Condicion.DISPONIBLE);

        jcbCondicion1.addItem(Condicion.REPARACION);

    }

    public void cargarComboCondicion() {
        jcbCondicion.addItem(Condicion.DISPONIBLE);

    }

    public void armarCabecera() {
        modelo.addColumn("Codigo");
        modelo.addColumn("Titulo");
        modelo.addColumn("Autor");
        modelo.addColumn("Condicion");
        modelo.addColumn("Cantidad");

        jtTabla.setModel(modelo);
    }

    private void ajustarTama√±oColumnas() {

        TableColumn columnaCodigo = jtTabla.getColumnModel().getColumn(0);
        columnaCodigo.setPreferredWidth(20);
        TableColumn columnaTitulo = jtTabla.getColumnModel().getColumn(1);
        columnaTitulo.setPreferredWidth(50);
        TableColumn columnaAutor = jtTabla.getColumnModel().getColumn(2);
        columnaAutor.setPreferredWidth(40);
        TableColumn columnaCondicion = jtTabla.getColumnModel().getColumn(3);
        columnaCondicion.setPreferredWidth(50);
        TableColumn columnaCantidad = jtTabla.getColumnModel().getColumn(4);
        columnaCantidad.setPreferredWidth(10);

    }

    private void crearComboBox() {
        JComboBox<Condicion> comboBox = new JComboBox<>();
        comboBox.addItem(Condicion.DISPONIBLE);
        comboBox.addItem(Condicion.REPARACION);
        DefaultCellEditor customEditor = new DefaultCellEditor(comboBox);

        jtTabla.getColumnModel().getColumn(3).setCellEditor(customEditor);
    }

    private void cargarTabla(TreeSet<Ejemplar> ListarEjemplar) {
        for (Ejemplar aux : ListarEjemplar) {
            modelo.addRow(new Object[]{aux.getCodigo(), aux.getLibro().getTitulo(), aux.getLibro().getAutor(), aux.getCondicion(), aux.getCantidad()});
        }
    }

    private void cargarTabla(Ejemplar ejemplar) {

        modelo.addRow(new Object[]{ejemplar.getCodigo(), ejemplar.getLibro().getTitulo(), ejemplar.getLibro().getAutor(), ejemplar.getCondicion()});

    }

}
